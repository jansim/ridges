% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_contours.R
\name{plot_contours}
\alias{plot_contours}
\title{Plot elevation data as contour lines}
\usage{
plot_contours(
  elevation = NULL,
  interval = 100,
  line_color = "black",
  linewidth = 0.25,
  color_by_elevation = "none",
  low_color = "darkblue",
  high_color = "darkred",
  fill_alpha = 1
)
}
\arguments{
\item{elevation}{A raster object containing elevation data, as returned by get_elevation()}

\item{interval}{Elevation interval between contour lines in meters (default: 100)}

\item{line_color}{Color of the contour lines (default: "black")}

\item{linewidth}{Width of the contour lines (default: 0.25)}

\item{color_by_elevation}{How to color elevation: "none", "lines", "fill", or "both" (default: "none")}

\item{low_color}{Color for lowest elevations when coloring by elevation (default: "darkblue")}

\item{high_color}{Color for highest elevations when coloring by elevation (default: "darkred")}

\item{fill_alpha}{Alpha transparency for fill color (default: 1)}
}
\value{
A ggplot object that can be further customized using ggplot2 functions
}
\description{
Creates a visualization of elevation data using contour lines. This function provides
a way to visualize terrain elevation changes through isolines.
}
\examples{
# Create a basic contour plot
plot_contours(ele_wilder_kaiser)

# Customize contour interval and appearance
plot_contours(ele_wilder_kaiser,
  interval = 50,
  line_color = "darkred",
  linewidth = 0.1
)

# Color contours by elevation
plot_contours(ele_wilder_kaiser, color_by_elevation = "lines")

# Color fill by elevation
plot_contours(ele_wilder_kaiser, color_by_elevation = "fill")

# Color both lines and fill by elevation
plot_contours(ele_wilder_kaiser, color_by_elevation = "both")

# Use continuous fill colors
plot_contours(ele_wilder_kaiser,
  color_by_elevation = "fill",
  discrete_fill = FALSE
)

}
